#!/usr/bin/env bash

set -e
# set -x

SCRIPTPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/"

source $JULIEN5CONFIGPATH/scripts/normalize.sh

function op.dir() {
	echo "$(normalize.path ~/.op/$PID/)"
}

function tags.cmd() {
	ctags="ctags"
	if [[ ! "$(system)" = "msys"  ]]; then
		ctags="ctags-exuberant"
	fi
	echo "$ctags --c++-kinds=+p --fields=+iaS  -a -f $(op.dir)/TAGS -e "
}

function tags.file() {
	$(tags.cmd) "$1"
	# ebrowse -o $(op.dir)/BROWSE "$1"
}

function tags.dir() {
	$(tags.cmd) -R --exclude=moc "$1"
}

function isnumber() {
	re='^[0-9]+$'
	if [[ ! $1 =~ $re ]] ; then
		return 1
	fi
	return 0;
}

function allfiles() {
	find $(echo $(cat $(op.dir)/projectiles)) \( -name "*.cpp" -or -name "*.h" \) \
		 -and \( -not -name ".*" \)
}

function start.tags() {
	# not good:
	# for stddir in $(find $(dirname $(which gcc))/.. -name "include" -type d)
	# do
	# 	echo ctags.exe -a -f $OP/TAGS -Re $(normalize.path $stddir)
	# done
	# for D in "${DIRS[@]}"
	for D in "${DIRS[@]}"
	do
		tags.dir $D	
		ls -lh $(op.dir)/TAGS
	done
	# allfiles | ebrowse -o $(op.dir)/BROWSE
	# ls -lh $(op.dir)/BROWSE
}


if [[ "$1" == "--start" ]]; then
	shift
	pushd $1
	export OSTYPE
	emacs --debug-init --maximized "$@" &
	RPID="$!"
	normalize.pid $RPID
	PID=$(normalize.pid "$RPID")
	echo mingw: $RPID public: $PID
	rm -Rf $(op.dir)
	echo create ~/.op/$PID/
	mkdir -p ~/.op/$PID/
	if [[ ! -d $(op.dir) ]]; then
		echo "could not create op directory for new processr pid=$PID"
		exit 1;
	fi
	touch $(op.dir)/projects
	popd
	RAWDIRS=("$@")
	DIRS=()
	for a in "${RAWDIRS[@]}"; do
		b="$(normalize.path "$a")"
		DIRS+=("$b")
		find "$b" -name "*~"  -o -name "*~*TMP*" -o -name "#*" -print -delete
		printf "%s\n" "$b" >> "$(op.dir)"/projectiles
	done	
	start.tags
	exit 0
elif isnumber "$1"; then
	PID=$(normalize.pid $1) # Warning: PID passed by emacs is already a WPID => normalize.pid hack.
	projectiles="$(op.dir)/projectiles"
	readarray -t DIRS < $projectiles
	#for a in "${DIRS[@]}"; do
	#	echo "directory:" "$a" 
	#done
else
	echo "WTF?!";
	exit 1
fi

if [[ "$2" == "--update-tags" ]]; then
	filename="$(normalize.path "$3")"
	tags.file "$filename"
fi
